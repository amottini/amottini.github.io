<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine_learning on Alejandro Mottini</title>
    <link>https://amottini.github.io/tags/machine_learning/</link>
    <description>Recent content in Machine_learning on Alejandro Mottini</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Alejandro Mottini</copyright>
    <lastBuildDate>Wed, 15 Feb 2017 10:32:45 +0100</lastBuildDate>
    <atom:link href="/tags/machine_learning/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Deep Choice Model Using Pointer Networks for Airline Itinerary Prediction</title>
      <link>https://amottini.github.io/project/deep_choicemodel-2017/</link>
      <pubDate>Wed, 15 Feb 2017 10:32:45 +0100</pubDate>
      
      <guid>https://amottini.github.io/project/deep_choicemodel-2017/</guid>
      <description>&lt;p style=&#39;text-align: justify;&#39;&gt;
Travel providers such as  airlines and on-line travel agents are becoming more and more interested in understanding how passengers choose among
alternative itineraries when searching for flights. This knowledge helps them better display and adapt their offer, taking into account market 
conditions and customer needs. Some common applications are not only filtering and sorting alternatives, but also changing certain attributes in 
real-time (e.g., changing the price). In this paper, we concentrate with the problem of modeling air passenger choices of flight itineraries. This 
problem  has historically been tackled using classical Discrete Choice Modelling techniques. Traditional statistical approaches, in particular the 
Multinomial Logit model (MNL), is widely used in industrial applications due to its simplicity and general good performance.  However, MNL models 
present several shortcomings and assumptions that might not hold in real applications. To overcome these difficulties, we present a new choice model 
based on Pointer Networks. Given an input sequence, this type of deep neural architecture combines Recurrent Neural Networks with the Attention Mechanism 
to learn the conditional probability of an output whose values correspond to positions in an input sequence. Therefore, given a sequence of different 
alternatives presented to a customer, the model can learn to point to the one most likely to be chosen by the customer. The proposed method was evaluated 
on a real dataset that combines on-line user search logs and airline flight bookings. Experimental results show that the proposed model outperforms the 
traditional MNL model on several metrics.
&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://amottini.github.io/img/pointer2.jpg&#34; alt=&#34;deep choice model diagram&#34;&gt;
    &lt;figcaption&gt;
        &lt;h4&gt;Proposed deep choice model using pointer network (encoder in green, decoder in blue, normalization in orange and embedding in purple).&lt;/h4&gt;
    &lt;/figcaption&gt; 
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://amottini.github.io/img/top_N_accV3.jpg&#34; alt=&#34;top-N acc. for tested methods&#34;&gt;
    &lt;figcaption&gt;
        &lt;h4&gt;top-N accuracy for the compared methods.&lt;/h4&gt;
    &lt;/figcaption&gt; 
&lt;/figure&gt;

&lt;p align=&#34;center&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/iyqh7mPrhFc?list=PLliTSxmRFGVPkvUZb3Q-DzvOgs20LOinA&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Relative Label Encoding for the Prediction of Airline Passenger Nationality</title>
      <link>https://amottini.github.io/project/relative-labelenc-2016/</link>
      <pubDate>Wed, 27 Jan 2016 10:28:06 +0100</pubDate>
      
      <guid>https://amottini.github.io/project/relative-labelenc-2016/</guid>
      <description>&lt;p style=&#39;text-align: justify;&#39;&gt;
In the airline industry, a Passenger Name Record (PNR) stores the travel itinerary of an individual or group of passengers travelling together. 
A PNR always contains all the flight information regarding each segment of a journey, and may contain additional important information such as nationality, gender and age of the passengers. From a commercial point of view, these passenger attributes are of particular interest to all actors in the travel industry (e.g., airlines and airports).  However, on average, only ten percent of PNR records have this information. Therefore, their prediction is of great interest. 
In this study we propose a methodology to predict the nationality of passengers based on PNR data. To avoid having to solve a classification problem with 195 classes, most of which will not be well represented in the data, we take advantage of a peculiarity of this data. In most cases, the nationality of a passenger will match the value of one or more of the other PNR attributes. Therefore, we can encode the target variable by transforming the nationality country code into the index of the feature it matches (e.g., country of origin or destination of the trip). 
The relative encoding of the target variable allows us to simplify the original problem significantly, while obtaining better classification accuracy.
Since the new classes are non-exclusive, the problem falls in the  multi-label classification paradigm.  
The proposed methodology was tested on PNR data of passengers passing through an important European airport, which handles more than twenty million passengers per year. The model performance was evaluated using three indicators. Results  show that we are able to predict the nationalities with good accuracy, and outperform both a  classical multi-class methodology and a ad-hoc rule-based algorithm used in the industry. 
&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://amottini.github.io/img/pnr_ex.jpg&#34; alt=&#34;segmentation&#34; width=&#34;45%&#34; height=&#34;45%&#34;&gt;
    &lt;figcaption&gt;
        &lt;h4&gt;Example of a PNR (illustrative example with fictitious data).&lt;/h4&gt;
    &lt;/figcaption&gt; 
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://amottini.github.io/img/topNat15V2.jpg&#34; alt=&#34;segmentation&#34; width=&#34;45%&#34; height=&#34;45%&#34;&gt;
    &lt;figcaption&gt;
        &lt;h4&gt;Predicted number of passengers (in log scale) per nationality for each of the three methods, comparison with ground truth (the countries have been anonymized and ordered by number of passengers).&lt;/h4&gt;
    &lt;/figcaption&gt; 
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://amottini.github.io/img/weighterError.jpg&#34; alt=&#34;segmentation&#34; width=&#34;45%&#34; height=&#34;45%&#34;&gt;
    &lt;figcaption&gt;
        &lt;h4&gt;Weighted error for the three compared methods.&lt;/h4&gt;
    &lt;/figcaption&gt; 
&lt;/figure&gt;
</description>
    </item>
    
    <item>
      <title>Axonal Tree Classification Using an Elastic Shape Analysis Based Distance</title>
      <link>https://amottini.github.io/project/axonal-treeclassification-2014/</link>
      <pubDate>Mon, 27 Jan 2014 10:32:33 +0100</pubDate>
      
      <guid>https://amottini.github.io/project/axonal-treeclassification-2014/</guid>
      <description>&lt;p style=&#39;text-align: justify;&#39;&gt;
The analysis of the morphological differences between normal and
pathological neuronal structures is of paramount importance. Some
methods for the comparison of axonal trees only take into account
topological information (such as TED), while others also include
geometrical information (such as Path2Path). In a previous work, we have
presented a new method for comparing tree-like shapes based on the
Elastic Shape Analysis Framework (ESA). In this paper, we extend this
method by computing the mean shape of a population. Moreover, we propose
to evaluate and compare these 3 approaches (TED, Path2Path and ESA) with
a classification scheme based on feature computation and K-means.
We evaluate these approaches on a database of 44 real 3D
confocal microscopy images of two populations of neurons. Results show
that the proposed method distinguishes better between the two
populations.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://amottini.github.io/img/mean_shape_procedure.jpg&#34; alt=&#34;mean shape procedure&#34;&gt;
    &lt;figcaption&gt;
        &lt;h4&gt;Calculation of mean shape of a set of tree shapes.&lt;/h4&gt;
    &lt;/figcaption&gt; 
&lt;/figure&gt;

&lt;figure&gt;
&lt;div class=&#34;main_block&#34;&gt;
    &lt;div class=&#34;inner_block&#34;&gt;
        &lt;img src=&#34;https://amottini.github.io/img/normal/MAX_3.jpg&#34; style=&#34;width: 200px; height: 200px;&#34; alt=&#34;normal1&#34;&gt;
    &lt;/div&gt;

    &lt;div class=&#34;inner_block&#34;&gt;
        &lt;img src=&#34;https://amottini.github.io/img/normal/MAX_5.jpg&#34; style=&#34;width: 200px; height: 200px;&#34; alt=&#34;normal2&#34;&gt;
    &lt;/div&gt;    
    
    &lt;div class=&#34;inner_block&#34;&gt;
        &lt;img src=&#34;https://amottini.github.io/img/normal/MAX_6.jpg&#34; style=&#34;width: 200px; height: 200px;&#34; alt=&#34;normal3&#34;&gt;
    &lt;/div&gt;    
&lt;/div&gt;

&lt;div class=&#34;main_block&#34;&gt;
    &lt;div class=&#34;inner_block&#34;&gt;
        &lt;img src=&#34;https://amottini.github.io/img/mutant/MAX_47.jpg&#34; style=&#34;width: 200px; height: 200px;&#34; alt=&#34;mutant1&#34;&gt;
    &lt;/div&gt;

    &lt;div class=&#34;inner_block&#34;&gt;
        &lt;img src=&#34;https://amottini.github.io/img/mutant/MAX_imp7_1GFP.jpg&#34; style=&#34;width: 200px; height: 200px;&#34; alt=&#34;mutant2&#34;&gt;
    &lt;/div&gt;    
    
    &lt;div class=&#34;inner_block&#34;&gt;
        &lt;img src=&#34;https://amottini.github.io/img/mutant/MAX_imp7_1GFP.jpg&#34; style=&#34;width: 200px; height: 200px;&#34; alt=&#34;mutant3&#34;&gt;
    &lt;/div&gt;    
&lt;/div&gt;

&lt;figcaption&gt;
        &lt;h4&gt;Examples of axonal trees from the normal (top) and mutant
(bottom)populations (2D projections).&lt;/h4&gt;
    &lt;/figcaption&gt; 
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://amottini.github.io/img/mean_shapes.jpg&#34; alt=&#34;mean shape&#34;&gt;
    &lt;figcaption&gt;
        &lt;h4&gt;Mean normal (left) and mutant (right) axonal trees (2D projections).&lt;/h4&gt;
    &lt;/figcaption&gt; 
&lt;/figure&gt;
</description>
    </item>
    
  </channel>
</rss>
